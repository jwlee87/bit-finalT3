<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.coily.repository.dao.GroupDAO">

	<resultMap id="groupDetailMap" type="groupDetailVO" >
		<result property="groupDetailNo" column="group_detail_no"/>
		<result property="groupHeaderNo" column="group_header_no"/>
		<result property="userNo" column="user_no"/>
		<result property="groupDetailConf" column="group_detail_conf"/>
		<result property="groupDetailRegDate" column="group_detail_reg_date"/>
		<result property="groupHeaderName" column="group_header_name"/>
		<result property="userNickName" column="user_nick_name"/>
		<result property="userEmail" column="user_email"/>
		<result property="userOrder" column="user_order"/>
	</resultMap>
	
	<!-- 그룹 등록 -->
	<!-- 그룹 헤더 등록 -->
	<insert id="insertGroupHeader" parameterType="groupHeaderVO" useGeneratedKeys="true" keyProperty="groupHeaderNo"  >
		insert into tb_group_header (group_header_name)
			 values ('새그룹')
		<selectKey resultType="int" order="AFTER" keyProperty="groupHeaderNo">
	        SELECT LAST_INSERT_ID() as groupHeaderNo
	    </selectKey>
	</insert>
	
	<!-- 그룹 헤더 상세 조회 -->
	<select id="selectOneHeader" parameterType="int" resultType="groupHeaderVO" >
		select group_header_no as groupHeaderNo, 
		       group_header_name as groupHeaderName
		  from tb_group_header
	     where group_header_no = #{groupHeaderNo}
	</select>
	
	<!-- 그룹 디테일 등록 -->
	<insert id="insertGroupDetail" parameterType="groupDetailVO">
		insert into tb_group_detail (
			group_header_no,
			user_no
		)values (
			#{groupHeaderNo},
			#{userNo}   <!--내가 고친거  -->
		)
	</insert>
	
	<!-- 그룹 상세 조회 -->
	<select id="selectOneDetail" parameterType="int" resultMap="groupDetailMap">
			select DISTINCT *
		  from (
		  	select a.group_detail_no, a.user_order, b.* 
		      from tb_group_detail a 
		 left join tb_user b
		     	on a.user_no = b.user_no
		     where a.group_header_no = #{groupHeaderNo}
		  order by a.user_order
		  		) c
	</select>
	
	<!-- 그룹 삭제 -->
	<!-- 그룹 디테일 삭제 -->
	<delete id="deleteGroupDetail" parameterType="int">
		delete
		  from tb_group_detail
		 where group_header_no = #{groupHeaderNo}
	</delete>
	
	<!-- 그룹 헤더 삭제 -->
	<delete id="deleteGroupHeader" parameterType="int">
		delete
		  from tb_group_header
		 where group_header_no = #{groupHeaderNo}
	</delete>
	
	<!-- 그룹 헤더 수정 -->
	<update id="updateGroupHeader" parameterType="groupHeaderVO" >
		update tb_group_header
		   set group_header_name = #{groupHeaderName}
		 where group_header_no = #{groupHeaderNo}
	</update>
	
	<!-- 그룹 디테일 수정 -->
<!-- 	<update id="updateGroupDetail" parameterMap="groupDetailMap">
		update tb_group_detail
		   set user_no = #{userNo}
		 where group_header_no = #{groupHeaderNo}
	</update>	 -->
	
	<!-- 그룹 리스트 + 페이징 -->
	<select id="selectGroupList" parameterType="searchVO" resultMap="groupDetailMap">
			select *
		  	  from (
		  	  	select a.group_header_name, b.* 
		  		  from tb_group_header a 
		     left join tb_group_detail b
		    		on a.group_header_no = b.group_header_no
		    	 where user_no = #{userNo}
		    	order by b.group_detail_reg_date desc	  		  
		  		  	) c
		 limit #{begin}, 100
	</select>
	
	<!-- 전체 그룹 수 -->
	<select id="selectGroupCnt" parameterType="searchVO" resultType="int">
		select count(*) 
		  from (
		  	select a.group_header_name, b.* 
		  	  from tb_group_header a 
		inner join tb_group_detail b
		    	on a.group_header_no = b.group_header_no	  		  		  
		  	   ) c
	</select>
	
	
	<select id="retriveUserList" resultMap="groupDetailMap">
<!-- 		 select gd.*, u.user_no, u.user_nick_name, u.user_conf -->
<!--            from tb_user u, tb_group_detail gd -->
<!--           where u.user_no = gd.user_no -->
<!--             and u.user_conf = 'Y' -->

<!-- 		 select distinct  u.user_no, u.user_nick_name, u.user_conf, gd.user_order -->
<!--            from tb_user u, tb_group_detail gd -->
<!--           where u.user_no = gd.user_no -->
<!--             and u.user_conf = 'Y' -->
		select * 
		  from tb_user
		 where user_conf = 'Y'
	
	</select>
	
	<select id="getUserNo" parameterType="String" resultType="int">
		select user_no
		  from tb_user
		 where user_nick_name = #{userNickName}
	</select>
	
	
	<insert id="updateAddUser" parameterType="UpdateAddUserVO">
		insert into tb_group_detail (group_header_no, user_no, user_order)
			values(#{groupHeaderNo}, #{userNo}, #{userOrder})	
	</insert>
	
	
	<delete id="resetGroup" parameterType="UpdateAddUserVO">
		delete 
          from tb_group_detail
		 where group_header_no = #{groupHeaderNo}
           and user_order > 0
	</delete>
</mapper>
